version: '3'

services:
  jira-node1:
    image: ${DOCKER_IMAGE}
    volumes:
     - ./jira/shared:/var/atlassian/application-data/jira/shared
     - jira-node1-volume:/var/atlassian/application-data/jira
#    ports:
#     - "8081:8080"
    depends_on:
     - postgres
    environment:
     - ATL_PROXY_NAME=${ATL_PROXY_NAME}
     - ATL_PROXY_PORT=${ATL_PROXY_PORT}
     - ATL_TOMCAT_SCHEME=${ATL_TOMCAT_SCHEME}
     - JVM_MINIMUM_MEMORY=${JVM_MINIMUM_MEMORY}
     - JVM_MAXIMUM_MEMORY=${JVM_MAXIMUM_MEMORY}
     - JVM_SUPPORT_RECOMMENDED_ARGS=${JVM_SUPPORT_RECOMMENDED_ARGS}
     - JVM_RESERVED_CODE_CACHE_SIZE=256m
     - SET_PERMISSIONS=true
     - CLUSTERED=true
     - JIRA_NODE_ID=jira-node1
     - JIRA_SHARED_HOME=/var/atlassian/application-data/jira/shared
     - ATL_JDBC_URL=jdbc:postgresql://postgres:5432/${APP_DB_NAME}
     - ATL_JDBC_USER=${APP_DB_USER}
     - ATL_JDBC_PASSWORD=${APP_DB_PASS}
     - ATL_DB_DRIVER=org.postgresql.Driver
     - ATL_DB_TYPE=postgres72
     - ATL_DB_SCHEMA_NAME=public

  jira-node2:
    image: ${DOCKER_IMAGE}
    volumes:
     - ./jira/shared:/var/atlassian/application-data/jira/shared
     - jira-node2-volume:/var/atlassian/application-data/jira
 #   ports:
 #    - "8082:8080"
    depends_on:
     - postgres
    environment:
     - ATL_PROXY_NAME=${ATL_PROXY_NAME}
     - ATL_PROXY_PORT=${ATL_PROXY_PORT}
     - ATL_TOMCAT_SCHEME=${ATL_TOMCAT_SCHEME}
     - JVM_MINIMUM_MEMORY=${JVM_MINIMUM_MEMORY}
     - JVM_MAXIMUM_MEMORY=${JVM_MAXIMUM_MEMORY}
     - JVM_SUPPORT_RECOMMENDED_ARGS=${JVM_SUPPORT_RECOMMENDED_ARGS}
     - JVM_RESERVED_CODE_CACHE_SIZE=256m
     - SET_PERMISSIONS=true
     - CLUSTERED=true
     - JIRA_NODE_ID=jira-node2
     - JIRA_SHARED_HOME=/var/atlassian/application-data/jira/shared
     - ATL_JDBC_URL=jdbc:postgresql://postgres:5432/${APP_DB_NAME}
     - ATL_JDBC_USER=${APP_DB_USER}
     - ATL_JDBC_PASSWORD=${APP_DB_PASS}
     - ATL_DB_DRIVER=org.postgresql.Driver
     - ATL_DB_TYPE=postgres72
     - ATL_DB_SCHEMA_NAME=public

  jira-node3:
    image: ${DOCKER_IMAGE}
    volumes:
     - ./jira/shared:/var/atlassian/application-data/jira/shared
     - jira-node3-volume:/var/atlassian/application-data/jira
#    ports:
#     - "8083:8080"
    depends_on:
     - postgres
    environment:
     - ATL_PROXY_NAME=${ATL_PROXY_NAME}
     - ATL_PROXY_PORT=${ATL_PROXY_PORT}
     - ATL_TOMCAT_SCHEME=${ATL_TOMCAT_SCHEME}
     - JVM_MINIMUM_MEMORY=${JVM_MINIMUM_MEMORY}
     - JVM_MAXIMUM_MEMORY=${JVM_MAXIMUM_MEMORY}
     - JVM_SUPPORT_RECOMMENDED_ARGS=${JVM_SUPPORT_RECOMMENDED_ARGS}
     - JVM_RESERVED_CODE_CACHE_SIZE=256m
     - SET_PERMISSIONS=true
     - CLUSTERED=true
     - JIRA_NODE_ID=jira-node3
     - JIRA_SHARED_HOME=/var/atlassian/application-data/jira/shared
     - ATL_JDBC_URL=jdbc:postgresql://postgres:5432/${APP_DB_NAME}
     - ATL_JDBC_USER=${APP_DB_USER}
     - ATL_JDBC_PASSWORD=${APP_DB_PASS}
     - ATL_DB_DRIVER=org.postgresql.Driver
     - ATL_DB_TYPE=postgres72
     - ATL_DB_SCHEMA_NAME=public

  postgres:
    image: postgres:10
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres" ]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always
    volumes:
     - ./pgdata:/var/lib/postgresql/data
     - ./pgdb:/docker-entrypoint-initdb.d/
    environment:
     - POSTGRES_USER=${POSTGRES_USER}
     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
     - APP_DB_USER=${APP_DB_USER}
     - APP_DB_PASS=${APP_DB_PASS}
     - APP_DB_NAME=${APP_DB_NAME}

  nodered:
    volumes:
     - nodered-volume:/data
    image: nodered/node-red:latest-minimal
#    ports:
#     - "1880:1880"

  grafana:
    image: grafana/grafana
    volumes:
      - grafana1data-volume:/var/lib/grafana
      - grafana1conf-volume:/etc/grafana
 #   ports:
 #     - "3000:3000"

  prometheus:
    image: bitnami/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus1-volume:/prometheus
    command:
    - '--config.file=/etc/prometheus/prometheus.yml'
    - '--web.enable-admin-api'
    - '--web.enable-lifecycle'
#  ports:
#   - "9090:9090"

  haproxy:
    image: haproxy:latest
    volumes:
    - ./haproxy:/usr/local/etc/haproxy:ro
    - ./haproxy/503.http:/etc/haproxy/errors/503.http
    - ./haproxy/haproxy.pem:/etc/haproxy/certs/haproxy.pem
    depends_on:
    - jira-node1
    - jira-node2
    - jira-node3
    - prometheus
    - grafana
    - nodered
    ports:
    - "80:80"
    - "443:443"
    networks:
      default:
        aliases:
          - jira.internal
          - prometheus.internal
          - grafana.internal
          - nodered.internal

volumes:
    nodered-volume:
    jira-node1-volume:
    jira-node2-volume:
    jira-node3-volume:
    grafana1data-volume:
    grafana1conf-volume:
    prometheus1-volume:
